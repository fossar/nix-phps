# This file builds given version of PHP and pushes it to Cachix cache.
# The following secrets need to be set:
# - “CACHIX_AUTH_TOKEN” for uploading built Nix packages to Cachix
name: Build

on:
  pull_request:

jobs:
  build:
    name: 'PHP ${{ matrix.php.branch }}'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php:
          - branch: '8.2'
          - branch: '8.1'
          - branch: '8.0'
          - branch: '7.4'
          - branch: '7.3'
          - branch: '7.2'
          - branch: '7.1'
          - branch: '7.0'
          - branch: '5.6'
      # We want to fix failures individually.
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v14

      - name: Set up Nix cache
        uses: cachix/cachix-action@v10
        with:
          name: fossar
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Set job parameters
        id: params
        run: |
          branch=${{ matrix.php.branch }}
          major=${branch%%.*}
          minor=${branch#*.}
          attr=php$major$minor
          echo "::set-output name=major::$major"
          echo "::set-output name=attr::$attr"

      - name: Build PHP
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-php

      - name: Build Imagick extension
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-imagick

      - name: Build Redis extension
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-redis

      - name: Build Redis 3 extension
        if: ${{ steps.params.outputs.major < 8 }}
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-redis3

      - name: Build MySQL extension
        if: ${{ steps.params.outputs.major < 7 }}
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-mysql

      - name: Build Xdebug extension
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-xdebug

      - name: Build Tidy extension
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-tidy

      - name: Check that composer PHAR works
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-composer-phar

      - name: Validate php.extensions.mysqli default unix socket path
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-mysqli-socket-path

      - name: Validate php.extensions.pdo_mysql default unix socket path
        run: nix-build -A outputs.checks.x86_64-linux.${{ steps.params.outputs.attr }}-pdo_mysql-socket-path
